provider "aws" {
  region     = "ap-south-1"
}

resource "aws_security_group" "allow_http" {
  name        = "allow_http"
  description = "Allow http inbound traffic"
  vpc_id      = "vpc-bc9985d4"
  ingress {
    description = "ssh"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "HTTP from VPC"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_http"
  }
}


resource "aws_instance" "web" {
  ami           = "ami-052c08d70def0ac62"
  instance_type = "t2.micro"
  key_name = "terraform1"
  security_groups = ["${aws_security_group.allow_http.name}"]

connection {
    user        = "ec2-user"
    private_key = file("C:/Users/AVINAVA/task_1/terraform1.pem")
      host = "${aws_instance.web.public_ip}"
  }  

  provisioner "remote-exec" {
      inline = [
        "sudo yum install httpd -y",
	"sudo yum install git -y",
        "sudo systemctl restart httpd",
        "sudo systemctl enable httpd",
	      ]
    }


  tags = {
    Name = "webserver"
  }
}



resource "aws_ebs_volume" "myvolume" {
  availability_zone = aws_instance.web.availability_zone
  size              = 1
}


resource "aws_volume_attachment" "ebs" {
  device_name = "/dev/sdc"
  volume_id   = "${aws_ebs_volume.myvolume.id}"
  instance_id = "${aws_instance.web.id}"
  force_detach = true 
}

resource "null_resource" "nullremote1" {

depends_on = [ 
	aws_volume_attachment.ebs,
	     ]

connection {
    type = "ssh"
    user = "ec2-user"
    private_key = file("C:/Users/AVINAVA/task_1/terraform1.pem")
      host = "${aws_instance.web.public_ip}"
  }
provisioner "remote-exec" {
 inline = [
	"sudo mkfs.ext4 /dev/xvdc",
	"sudo mount /dev/xvdc /var/www/html/",
        "sudo rm -rf /var/www/html/*",
	"sudo git clone https://github.com/sunny92-bit/hybridcloud_task1.git /var/www/html/",
	"sudo setenforce 0"
	]

  }
}




output "instanceinfo" {

value = aws_instance.web.public_dns

}

output "volumeinfo" {

value = aws_ebs_volume.myvolume.id

}
